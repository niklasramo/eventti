var E={ADD:"add",UPDATE:"update",IGNORE:"ignore",THROW:"throw"},r,v=class{constructor(t={}){this.dedupe=t.dedupe||E.ADD,this.getId=t.getId||(()=>Symbol()),this._events=new Map}_getListeners(t){let n=this._events.get(t);return n?n.l||(n.l=[...n.m.values()]):null}on(t,n,e){let i=this._events,s=i.get(t);s||(s={m:new Map,l:null},i.set(t,s));let o=s.m;if(e=e===r?this.getId(n):e,o.has(e))switch(this.dedupe){case E.THROW:throw new Error("Eventti: duplicate listener id!");case E.IGNORE:return e;case E.UPDATE:{s.l=null;break}default:o.delete(e),s.l=null}return o.set(e,n),s.l?.push(n),e}once(t,n,e){let i=0;return e=e===r?this.getId(n):e,this.on(t,(...s)=>{i||(i=1,this.off(t,e),n(...s))},e)}off(t,n){if(t===r){this._events.clear();return}if(n===r){this._events.delete(t);return}let e=this._events.get(t);e?.m.delete(n)&&(e.l=null,e.m.size||this._events.delete(t))}emit(t,...n){let e=this._getListeners(t);if(e){let i=e.length,s=0;if(n.length)for(;s<i;s++)e[s](...n);else for(;s<i;s++)e[s]()}}listenerCount(t){if(t===r){let n=0;return this._events.forEach(e=>{n+=e.m.size}),n}return this._events.get(t)?.m.size||0}};export{v as Emitter,E as EmitterDedupe};
